version: '3.8'

services:
  mongodb:
    image: mongo:7
    container_name: financial-agent-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - financial-agent-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: financial-agent-server
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/financial-agent?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      AES_256_KEY: ${AES_256_KEY}
      PLAID_CLIENT_ID: ${PLAID_CLIENT_ID}
      PLAID_SECRET: ${PLAID_SECRET}
      PLAID_ENV: sandbox
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      RP_NAME: Financial Agent
      RP_ID: localhost
      ORIGIN: http://localhost:3000
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:80
    depends_on:
      - mongodb
    networks:
      - financial-agent-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: financial-agent-client
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - server
    networks:
      - financial-agent-network

volumes:
  mongodb_data:
    driver: local

networks:
  financial-agent-network:
    driver: bridge
